---
- name: Check directory /var/lib/libvirt/images
  ansible.builtin.stat:
    path: /var/lib/libvirt/images
  register: libvirt_images_dir
  become: true

- name: Get file system type of /var/lib
  ansible.builtin.command: stat --file-system --format=%T /var/lib
  become: true
  register: var_lib_fstype
  changed_when: false

- name: Create /var/lib/libvirt/images subvolume if not exist, and disable CoW
  ansible.builtin.shell: |
    mkdir -p /var/lib/libvirt
    btrfs subvolume create /var/lib/libvirt/images
    chattr +C /var/lib/libvirt/images
  become: true
  when:
    - not libvirt_images_dir.stat.exists
    - var_lib_fstype.stdout == 'btrfs'

- name: Install libvirt packages
  community.general.pacman:
    name:
      # libvirt
      - qemu-desktop
      - libvirt
      - virt-manager
      # default NAT/DHCP networking support
      - iptables-nft
      - dnsmasq
      #- dmidecode
      # bridged networking support
      - bridge-utils
      # UEFI support
      - edk2-ovmf
    state: present
  become: true

- name: Add user to libvirt group (non systemd-homed)
  ansible.builtin.user:
    name: "{{ ansible_user_id }}"
    groups: libvirt
    append: true
  become: true
  when: not homed

- name: Add user to libvirt group (systemd-homed)
  community.general.homectl:
    name: "{{ ansible_user_id }}"
    password: "{{ ansible_become_password }}"
    memberof: "{{ ansible_user_id }},wheel,libvirt"
  become: true
  when: homed

- name: systemctl enable libvirtd.service
  ansible.builtin.systemd: name=libvirtd.service enabled=true
  register: libvirtd
  become: true

- name: systemctl start libvirtd.service virtlogd.service
  ansible.builtin.systemd: name={{ item }} state=started
  when: libvirtd.changed
  become: true
  loop:
    - libvirtd.service
    - virtlogd.service

- name: Check default NAT is enabled or not
  ansible.builtin.shell: virsh net-info --network default | grep '^Autostart:.*yes' | wc -l
  become: true
  register: libvirt_default_net
  changed_when: false

- name: Enable and start default NAT
  ansible.builtin.shell: |
    virsh net-autostart default

    # reload firewall and start default network
    firewall-cmd --reload
    virsh net-start default
  become: true
  when: libvirt_default_net.stdout == '0'

