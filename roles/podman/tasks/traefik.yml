---
- name: Allow rootless podman access 443 port
  ansible.builtin.copy:
    content: |
      net.ipv4.ip_unprivileged_port_start=443
    dest: /etc/sysctl.d/unprivileged_port_start.conf
    owner: root
    group: root
    mode: '0644'
  become: true
  register: unprivileged_port_start

- name: sysctl net.ipv4.ip_unprivileged_port_start=443
  ansible.builtin.command: sysctl net.ipv4.ip_unprivileged_port_start=443
  become: true
  when: unprivileged_port_start is changed

- name: traefik config direcoty
  ansible.builtin.file:
    path: "{{ podman_user.traefik_config_dir }}"
    state: directory
    owner: "{{ podman_user.name}}"
    group: "{{ podman_user.name }}"
    mode: '0700'
  become: true

- name: traefik static config file
  ansible.builtin.copy:
    src: "{{ podman_user.traefik_static_config }}"
    dest: "{{ podman_user.traefik_config_dir }}/static_conf.yml"
    owner: "{{ podman_user.name}}"
    group: "{{ podman_user.name }}"
    mode: '0600'
  become: true

- name: traefik dynamic config file
  ansible.builtin.copy:
    src: "{{ podman_user.traefik_dynamic_config }}"
    dest: "{{ podman_user.traefik_config_dir }}/dynamic_conf.yml"
    owner: "{{ podman_user.name}}"
    group: "{{ podman_user.name }}"
    mode: '0600'
  become: true

- name: traefik.container
  ansible.builtin.template:
    src: traefik.container.j2
    dest: "/home/{{ podman_user.name }}/.config/containers/systemd/traefik.container"
    owner: "{{ podman_user.name}}"
    group: "{{ podman_user.name }}"
    mode: '0600'
  become: true
  become_user: "{{ podman_user.name }}"

- name: traefik-tailscale.container
  ansible.builtin.template:
    src: traefik-tailscale.container.j2
    dest: "/home/{{ podman_user.name }}/.config/containers/systemd/traefik-tailscale.container"
    owner: "{{ podman_user.name}}"
    group: "{{ podman_user.name }}"
    mode: '0600'
  become: true
  become_user: "{{ podman_user.name }}"
  when: podman_user.traefik_tailscale_enable

- name: systemctl --user daemon-reload
  ansible.builtin.systemd: daemon_reload=true scope=user
  become: true
  become_user: "{{ podman_user.name }}"

- name: copy-ssl.service
  ansible.builtin.template:
    src: copy-ssl.service.j2
    dest: "/etc/systemd/system/copy-ssl.service"
    owner: "root"
    group: "root"
    mode: '0600'
  become: true
  register: copy_ssl_service

- name: copy-ssl.timer
  ansible.builtin.copy:
    content: |
      [Unit]
      Description=Copy SSL certificates to Caddy

      [Timer]
      OnCalendar=00:10:00

      [Install]
      WantedBy=timers.target
    dest: "/etc/systemd/system/copy-ssl.timer"
    owner: "root"
    group: "root"
    mode: '0600'
  become: true

- name: systemctl daemon-reload
  ansible.builtin.systemd: daemon_reload=true
  become: true

- name: systemctl enable copy-ssl.timer
  ansible.builtin.systemd: name=copy-ssl.timer enabled=true
  become: true

- name: systemctl start copy-ssl.service
  ansible.builtin.systemd: name=copy-ssl.service state=started
  become: true
  when: copy_ssl_service.changed

- name: systemctl --user daemon-reload
  ansible.builtin.systemd: daemon_reload=true scope=user
  become: true
  become_user: "{{ podman_user.name }}"

- name: systemctl --user enable --now traefik.service
  ansible.builtin.systemd: name=traefik.service state=started enabled=true scope=user
  become: true
  become_user: "{{ podman_user.name }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: Set firewall rules for https
  ansible.posix.firewalld:
    rich_rule: rule family="ipv4" source address="{{ item }}" service name="https" accept
    #zone: "{{ firewalld_default_zone }}"
    permanent: true
    immediate: true
    state: enabled
  loop: "{{ podman_user.https_accept_source_ipv4 }}"
  become: true
  when:
    - podman_user.https_accept_source_ipv4 is defined
