---
- name: jellyfin container config direcoty
  ansible.builtin.file:
    path: "{{ podman_user.jellyfin_config_dir }}"
    state: directory
    owner: "{{ podman_user.name }}"
    group: "{{ podman_user.name }}"
    mode: '0700'
  become: true

- name: jellyfin.service
  ansible.builtin.template:
    src: jellyfin.service.j2
    dest: "/home/{{ podman_user.name }}/.config/systemd/user/jellyfin.service"
    owner: "{{ podman_user.name }}"
    group: "{{ podman_user.name }}"
    mode: '0600'
  become: true
  become_user: "{{ podman_user.name }}"

- name: systemctl --user daemon-reload
  ansible.builtin.systemd: daemon_reload=true scope=user
  become: true
  become_user: "{{ podman_user.name }}"

- name: systemctl --user enable --now jellyfin.service
  ansible.builtin.systemd: name=jellyfin enabled=true state=started scope=user
  become: true
  become_user: "{{ podman_user.name }}"

# 8096/tcp  jellyfin port
- name: add jellyfin firewalld service file jellyfin.xml
  ansible.builtin.copy:
    content: |
      <?xml version="1.0" encoding="utf-8"?>
      <service>
        <short>Jellyfin</short>
        <description>Jellyfin</description>
        <port protocol="tcp" port="8096"/>
      </service>
    dest: /etc/firewalld/services/jellyfin.xml
    owner: root
    group: root
    mode: '0644'
  become: true
  register: jellyfin_firewalld_file

- name: Reload firewalld when jellyfin.xml changed
  ansible.builtin.command: firewall-cmd --reload
  become: true
  when: jellyfin_firewalld_file.changed

- name: Set firewall rules for jellyfin listening port (TCP)
  ansible.posix.firewalld:
    rich_rule: rule family="ipv4" source address="{{ reverse_proxy_ipv4 }}" service name="jellyfin" accept
    zone: "{{ firewalld_default_zone }}"
    permanent: true
    immediate: true
    state: enabled
  become: true
  when: reverse_proxy_ipv4 is defined
