---
- name: swag container config direcoty
  ansible.builtin.file:
    path: "{{ podman_user.swag_config_dir }}"
    state: directory
    owner: "{{ podman_user.name}}"
    group: "{{ podman_user.name }}"
    mode: '0700'
  become: true

- name: Allow rootless podman access 443 port
  ansible.builtin.copy:
    content: |
      net.ipv4.ip_unprivileged_port_start=443
    dest: /etc/sysctl.d/unprivileged_port_start.conf
    owner: root
    group: root
    mode: '0644'
  become: true
  register: unprivileged_port_start

- name: sysctl net.ipv4.ip_unprivileged_port_start=443
  ansible.builtin.command: sysctl net.ipv4.ip_unprivileged_port_start=443
  become: true
  when: unprivileged_port_start is changed

- name: swag.service
  ansible.builtin.template:
    src: swag.service.j2
    dest: "/home/{{ podman_user.name }}/.config/systemd/user/swag.service"
    owner: "{{ podman_user.name}}"
    group: "{{ podman_user.name }}"
    mode: '0600'
  become: true
  become_user: "{{ podman_user.name }}"

- name: systemctl --user daemon-reload
  ansible.builtin.systemd: daemon_reload=true scope=user
  become: true
  become_user: "{{ podman_user.name }}"

- name: systemctl --user enable --now swag.service
  ansible.builtin.systemd: name=swag.service enabled=true state=started scope=user
  become: true
  become_user: "{{ podman_user.name }}"

- name: Set firewall rules for https
  ansible.posix.firewalld:
    rich_rule: rule family="ipv4" source address="{{ item }}" service name="https" accept
    #zone: "{{ firewalld_default_zone }}"
    permanent: true
    immediate: true
    state: enabled
  loop: "{{ podman_user.https_accept_source_ipv4 }}"
  become: true
  when: 
    - podman_user.https_accept_source_ipv4 is defined
