# swag.service

[Unit]
Description=Podman swag.service
Documentation=man:podman-generate-systemd(1)
Wants=network-online.target
After=network-online.target nss-lookup.target
RequiresMountsFor=%t/containers

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=on-failure
TimeoutStopSec=70
ExecStart=/usr/bin/podman run \
    --cidfile=%t/%n.ctr-id \
    --cgroups=no-conmon \
    --rm \
    --sdnotify=conmon \
    --detach \
    --replace \
    --label io.containers.autoupdate=registry \
    --dns={{ DNS }} \
    --uidmap 1000:0:1 \
    --uidmap 0:1:1000 \
    --uidmap 1001:1001:64536 \
    --name=swag \
    --cap-add=NET_ADMIN \
    --env PUID=1000 \
    --env PGID=1000 \
    --env TZ={{ TZ }} \
    --network=slirp4netns:port_handler=slirp4netns \
    --publish 443:443/tcp \
    --volume {{ podman_user.swag_config_dir }}:/config:Z \
    --env URL={{ podman_user.swag_domain }} \
    --env VALIDATION=dns \
    --env SUBDOMAINS={{ podman_user.swag_subdomains }} \
    --env CERTPROVIDER=letsencrypt \
    --env DNSPLUGIN=cloudflare \
    --env EMAIL={{ podman_user.swag_email }} \
    --env ONLY_SUBDOMAINS=true \
    --env STAGING=false \
    --env PROPAGATION=60 \
{% if podman_user.swag_mods is defined %}
    --env DOCKER_MODS='{{ podman_user.swag_mods }}' \
{% endif %}
{% if podman_user.swag_CROWDSEC_API_KEY is defined %}
    --env CROWDSEC_API_KEY='{{ podman_user.swag_CROWDSEC_API_KEY }}' \
    --env CROWDSEC_LAPI_URL='{{ podman_user.swag_CROWDSEC_LAPI_URL }}' \
{% endif %}
    lscr.io/linuxserver/swag:latest
ExecStop=/usr/bin/podman stop \
    --ignore \
    --time=10 \
    --cidfile=%t/%n.ctr-id
ExecStopPost=/usr/bin/podman rm \
    --force \
    --ignore \
    --time=10 \
    --cidfile=%t/%n.ctr-id
Type=notify
NotifyAccess=all

[Install]
WantedBy=default.target
