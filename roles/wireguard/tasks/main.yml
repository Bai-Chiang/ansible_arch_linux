---
- block:
  - name: pacman -S wireguard-tools
    community.general.pacman:
      name:
        - wireguard-tools
        - systemd-resolvconf
      state: present
    when: ansible_facts['os_family'] == "Archlinux"

  - name: apt install wireguard
    ansible.builtin.apt:
      name: wireguard
      state: present
    when: ansible_facts['os_family'] == "Debian"

  - include_tasks: generate_keys.yml
    when: wg_interface_name is undefined

  - name: Copy wg config file when wg_interface_name is provided
    ansible.builtin.copy:
      src: "{{ wg_interface_name }}.conf"
      dest: "/etc/wireguard/{{ wg_interface_name }}.conf"
      owner: root
      group: root
      mode: '0600'
    when: wg_interface_name is defined

  - name: "systemctl enable wg-quick@{{ wg_interface_name }}.service"
    ansible.builtin.systemd:
      name: "wg-quick@{{ wg_interface_name }}.service"
      enabled: yes

  - include_tasks: kill_switch.yml
    when: wg_kill_switch is defined and wg_kill_switch

  #  - name: Allow wireguard connection
  #    community.general.ufw:
  #      rule: allow
  #      from_ip: any
  #      proto: udp
  #      port: "{{ wg_port }}"
  #      comment: Allow wireguard connection
  #
  #- name: IP forwarding for routed trafic
  #  ansible.builtin.lineinfile:
  #    path: /etc/ufw/sysctl.conf
  #    regexp: "{{ item.regexp }}"
  #    line: "{{ item.line }}"
  #    state: absent
  #  loop:
  #    - { regexp: '^net/ipv4/ip_forward', line: net/ipv4/ip_forward=1, insertafter: '^#net/ipv4/ip_forward' }
  #    - { regexp: '^net/ipv6/conf/default/forwarding', line: net/ipv6/conf/default/forwarding=1, insertafter: '^#net/ipv6/conf/default/forwarding' }
  #    - { regexp: '^net/ipv6/conf/all/forwarding', line: net/ipv6/conf/all/forwarding=1, insertafter: '^#net/ipv6/conf/all/forwarding' }
  
  #- name: Forwarding rules
  #  community.general.ufw:
  #    route: yes
  #    rule: allow
  #    interface_in: wg0
  #    from_ip: any
  #    to_ip: any
  #    proto: tcp
  #    comment: "Forwarding rule for wireguard"

  become: yes
