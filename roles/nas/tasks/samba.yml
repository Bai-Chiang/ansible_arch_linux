---
- name: pacman -S samba
  community.general.pacman: name=samba state=present
  become: true
  when: ansible_distribution == "Archlinux"

- name: dnf install samba
  ansible.builtin.dnf: name=samba state=present
  become: true
  when: ansible_distribution == "Fedora"

- name: Create /etc/samba/smb.conf
  ansible.builtin.template:
    src: smb.conf.j2
    dest: /etc/samba/smb.conf
    validate: testparm -s %s
  become: true

#- name: Add custom Samba rule to UFW
#  ansible.builtin.blockinfile:
#    path: /etc/ufw/applications.d/ufw-custom
#    block: | 
#      [Samba-custom]
#      title=SMB/CIFS server
#      description=SMB/CIFS server
#      ports=445/tcp
#    create: true
#    marker: "; SMB/CIFS {mark} ANSIBLE MANAGED BLOCK"
#
#- name: Configure firewall for CIFS
#  community.general.ufw:
#    rule: allow
#    direction: in
#    name: Samba-custom
#    from: "{{ item }}"
#    comment: "Allow SMB/CIFS from {{ item }}"
#  loop: "{{ CIFS_allow_ip }}"

- name: Create samba user
  ansible.builtin.user:
    name: "{{ item.name }}"
    password: '!'
    password_lock: true
    create_home: true
    shell: "/usr/bin/nologin"
  become: true
  when: 
    - item.name != ansible_user_id
    - item.name != "root"
  loop: "{{ smb_users }}"

- name: Add samba user
  shell: (echo {{ item.passwd }}; echo {{ item.passwd }}) | smbpasswd -s -a {{ item.name }}
  register: samba_user
  changed_when: "'Added user' in samba_user.stdout"
  loop: "{{ smb_users }}"
  become: true

- name: Set firewall rules for samba
  ansible.posix.firewalld:
    rich_rule: rule family="ipv4" source address="{{ item }}" service name="samba" accept
    zone: "{{ firewalld_default_zone }}"
    permanent: true
    immediate: true
    state: enabled
  loop: "{{ samba_accept_source_ipv4 }}"
  when: samba_accept_source_ipv4 is defined
  become: true

- name: systemctl enable smb.service
  ansible.builtin.systemd: name=smb enabled=true
  become: true

